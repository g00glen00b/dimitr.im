---
import {sliceIntoPages} from '../../../utils/array';
import {mapToSortedPosts} from '../../../utils/post';
import {getCollection} from 'astro:content';
import {type CollectionPage} from '../../../models/CollectionPage';
import {type Post} from '../../../models/Post';
import SiteLayout from '../../../layouts/SiteLayout.astro';
import PostCardContainer from '../../../components/PostCardContainer.astro';
import Pagination from '../../../components/Pagination.astro';
import {CONFIG} from '../../../config/config';

export interface Props {
  page: CollectionPage<Post>
}

export async function getStaticPaths() {
  const entries = await getCollection('posts');
  const pages = sliceIntoPages(mapToSortedPosts(entries), CONFIG.site.pageSize);
  return pages.map(page => ({
    params: {page: page.page},
    props: {page},
  }));
}

const {page} = Astro.props;
---
<SiteLayout
  showHeaderFooter={true}
  disableComments={true}
  title="Posts"
  description="Posts"
  path={`/posts/page/${page.page}`}>
  <h1 class="page__title">
    Posts
  </h1>
  <PostCardContainer
    posts={page.results}>
  </PostCardContainer>
  <Pagination
    pageCount={page.totalPages}
    currentPage={page.page}
    base="/posts"/>
</SiteLayout>