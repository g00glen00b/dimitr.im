---
import {type Tag} from '../models/Tag';
import {Icon} from 'astro-icon';
import {format} from 'date-fns';
import {type ReadTimeResults} from 'reading-time';

export interface Props {
  readingTime: ReadTimeResults;
  tags: Tag[];
  date: Date;
  title: string;
  featuredImage: string;
}
const {readingTime, tags, date, title, featuredImage} = Astro.props;
const readableDate = format(date, 'MMMM do, yyyy');
const minutesRead = Math.round(readingTime.minutes);
---
<div class={`page-title ${featuredImage != null ? `page-title--with-image` : `page-title--without-image`}`}>
  {featuredImage && <div class="page-title__image">
    <img
      src={featuredImage}
      alt={`Featured image for "${title}"`}/>
  </div>}
  <h1 class="page-title__title">{title}</h1>
  <dl class="page-title__info">
    <dt>
      <Icon
        name="mdi:calendar-blank-outline"
        aria-label="Calendar icon" />
    </dt>
    <dd
      aria-label={`Posted at ${readableDate}`}>
      {readableDate}
    </dd>

    <dt>
      <Icon
        name="mdi:stopwatch-outline"
        aria-label="Stopwatch icon" />
    </dt>
    <dd>
      {minutesRead} minute read
    </dd>

    {tags != null && <dt>
      <Icon
        name="mdi:tag-outline"
        aria-label="Tag icon" />
    </dt>}
    {tags != null && <dd>
      {tags.map(({name, path}) => <a
        href={`/tag/${path}`}
        title={`View all posts tagged with ${name}`}>
        {name}
      </a>)}
    </dd>}
  </dl>
</div>

<style>
    .page-title {
        display: grid;
        grid-template-columns: 10rem auto;
        grid-template-rows: auto auto;
        margin: 2rem 0 3rem;
        background-color: var(--background-color);
        border: solid 2px var(--primary-color);
        padding: 1.5rem 1.5rem 0 1.5rem;
        box-shadow: 1rem 1rem 0 0 var(--primary-color);
    }

    .page-title__title {
        font-size: 2rem;
        font-weight: 700;
        grid-row: 1;
        grid-column: 2;
        margin: 0;
    }

    .page-title__title > strong {
        font-weight: 500;
        text-decoration: underline;
    }

    .page-title__title + .page-title__info {
        grid-row: 2;
        grid-column: 2;
    }

    .page-title__info dt {
        width: 24px;
        height: 24px;
        margin: 0 0 1rem;
        color: var(--primary-color);
    }

    .page-title__info dd {
        width: calc(100% - 40px);
        padding: calc((24px - 1rem) / 2) 0 calc((24px - 1rem) / 2) 1rem;
        height: 24px;
        vertical-align: middle;
        font-size: 1rem;
        line-height: 1rem;
        margin: 0 0 1rem;
    }

    .page-title__info dt,
    .page-title__info dd {
        display: inline-block;
    }

    .page-title__info dd > a::after {
        content: ', ';
        color: var(--text-color);
    }

    .page-title__info dd > a:last-child::after {
        content: '';
    }

    .page-title__image {
        grid-row-start: 1;
        grid-row-end: 3;
        grid-column: 1;
        height: 8rem;
        padding-right: 2rem;
    }

    .page-title__image img {
        width: 80px;
    }

    .page-title--without-image .page-title__title,
    .page-title--without-image .page-title__info {
        grid-column-start: 1;
        grid-column-end: 3;
    }

    @media (max-width: 640px) {
        .page-title {
            display: flex;
            flex-direction: column;
        }

        .page-title__image {
            padding: 0;
            align-self: center;
        }
    }
</style>